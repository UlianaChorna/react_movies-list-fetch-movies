{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","_useState","useState","_useState2","_slicedToArray","setTitle","_useState3","_useState4","setMovie","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","error","setError","_Fragment","onSubmit","event","query","preventDefault","trim","fetch","concat","then","res","json","catch","Response","Error","response","newMovie","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","onChange","e","target","value","classNames","disabled","onClick","uniqMovie","every","prevMovie","App","currentMovie","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba5f8bf6.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (movie: Movie) => void,\n  movies: Movie[],\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie, movies }) => {\n  const [title, setTitle] = useState<string>('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const handleInputTitle = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setError(false);\n  };\n\n  const handleAddMovie = () => {\n    const uniqMovie = movies.every(\n      prevMovie => prevMovie.imdbId !== movie?.imdbId,\n    );\n\n    if (movie && uniqMovie) {\n      addMovie(movie);\n    }\n\n    setTitle('');\n    setMovie(null);\n  };\n\n  const handleSearchMovie = (event: React.FormEvent) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    getMovie(title.trim())\n      .then((response) => {\n        if ('Response' in response && response.Response === 'False') {\n          setError(true);\n          setMovie(null);\n        } else {\n          setError(false);\n\n          const res = response as MovieData;\n\n          const newMovie:Movie = {\n            title: res.Title,\n            description: res.Plot || '',\n            imgUrl: res.Poster !== 'N/A'\n              ? res.Poster\n              : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n            imdbUrl: `https://www.imdb.com/title/${res.imdbID}`,\n            imdbId: res.imdbID,\n          };\n\n          setMovie(newMovie);\n        }\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSearchMovie}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n              onChange={handleInputTitle}\n              value={title}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!title}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {\n        movie && (\n          <div className=\"container\" data-cy=\"previewContainer\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </div>\n        )\n      }\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=ee64d8a7';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovie] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovie((currentMovie) => [...currentMovie, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}